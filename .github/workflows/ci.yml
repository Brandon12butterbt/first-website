name: CI Build (Self-Hosted)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: self-hosted

    steps:
      # t122
      # - name: Copy angular build file to EC2 host machine
      #   run: scp -i "$env:RUNNER_WORKSPACE/ansible.pem" -o StrictHostKeyChecking=no -r ./dist/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ec2-user
      # - name: Create private key file
      #   run: |
      #     $tempPath = Join-Path $env:RUNNER_TEMP "deploy_key.pem"
      #     @'
      #     ${{ secrets.EC2_SSH_KEY }}
      #     '@ > $tempPath
      #     cat $tempPath

      # - name: Grant permission to key file
      #   run: |
      #     $tempPath = Join-Path $env:RUNNER_TEMP "deploy_key.pem"
      #     $sid = [System.Security.Principal.WindowsIdentity]::GetCurrent().User
      #     icacls $tempPath /inheritance:r /grant:r "*$($sid.Value):F"
      - name: Create private key file
        run: |
          $keyPath = "$env:RUNNER_WORKSPACE\temp_key.pem"
          "${{ secrets.EC2_SSH_KEY }}" | Out-File -FilePath $keyPath -Encoding ascii -Force
      
          # Optional: tighten permissions (avoids OpenSSH complaints)
          icacls $keyPath /inheritance:r /grant:r "$($env:USERNAME):(R)"
      
          # Run SCP
          scp -i $keyPath -o StrictHostKeyChecking=no -r ./dist/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/ec2-user
        
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Run build script
        run: npx ng build --configuration=production

      - name: Copy angular build file to EC2 host machine
        run: scp -i "$env:RUNNER_WORKSPACE/ansible.pem" -o StrictHostKeyChecking=no -r ./dist/* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/var/www/afluxgen/
        
